// Code generated by dagger-compiler.  Do not edit.
package sngular.com.atmsmap.presentation.view.fragment;

import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<ATMListDialog>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code ATMListDialog} and its
 * dependencies.
 *
 * Being a {@code Provider<ATMListDialog>} and handling creation and
 * preparation of object instances.
 *
 * Being a {@code MembersInjector<ATMListDialog>} and handling injection
 * of annotated fields.
 */
public final class ATMListDialog$$InjectAdapter extends Binding<ATMListDialog>
    implements Provider<ATMListDialog>, MembersInjector<ATMListDialog> {
  private Binding<sngular.com.atmsmap.presentation.map.MapService> mMapManager;
  private Binding<sngular.com.atmsmap.presentation.view.fragment.base.BaseDialogFragment> supertype;

  public ATMListDialog$$InjectAdapter() {
    super("sngular.com.atmsmap.presentation.view.fragment.ATMListDialog", "members/sngular.com.atmsmap.presentation.view.fragment.ATMListDialog", NOT_SINGLETON, ATMListDialog.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    mMapManager = (Binding<sngular.com.atmsmap.presentation.map.MapService>) linker.requestBinding("sngular.com.atmsmap.presentation.map.MapService", ATMListDialog.class, getClass().getClassLoader());
    supertype = (Binding<sngular.com.atmsmap.presentation.view.fragment.base.BaseDialogFragment>) linker.requestBinding("members/sngular.com.atmsmap.presentation.view.fragment.base.BaseDialogFragment", ATMListDialog.class, getClass().getClassLoader(), false, true);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(mMapManager);
    injectMembersBindings.add(supertype);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<ATMListDialog>}.
   */
  @Override
  public ATMListDialog get() {
    ATMListDialog result = new ATMListDialog();
    injectMembers(result);
    return result;
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<ATMListDialog>}.
   */
  @Override
  public void injectMembers(ATMListDialog object) {
    object.mMapManager = mMapManager.get();
    supertype.injectMembers(object);
  }

}
