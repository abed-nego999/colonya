// Code generated by dagger-compiler.  Do not edit.
package sngular.com.atmsmap.app.module;

import dagger.internal.BindingsGroup;
import dagger.internal.ModuleAdapter;
import dagger.internal.ProvidesBinding;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ActivityModule$$ModuleAdapter extends ModuleAdapter<ActivityModule> {
  private static final String[] INJECTS = { "members/sngular.com.atmsmap.presentation.view.activity.MapActivity", "members/sngular.com.atmsmap.presentation.view.fragment.MapFragment", "members/sngular.com.atmsmap.presentation.view.fragment.ATMListDialog", "members/sngular.com.atmsmap.presentation.view.fragment.OfficeListDialog", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ActivityModule$$ModuleAdapter() {
    super(sngular.com.atmsmap.app.module.ActivityModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(BindingsGroup bindings, ActivityModule module) {
    bindings.contributeProvidesBinding("@sngular.com.atmsmap.app.annotation.ForActivity()/android.content.Context", new ProvideActivityContextProvidesAdapter(module));
  }

  /**
   * A {@code Binding<android.content.Context>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.content.Context>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideActivityContextProvidesAdapter extends ProvidesBinding<android.content.Context>
      implements Provider<android.content.Context> {
    private final ActivityModule module;

    public ProvideActivityContextProvidesAdapter(ActivityModule module) {
      super("@sngular.com.atmsmap.app.annotation.ForActivity()/android.content.Context", IS_SINGLETON, "sngular.com.atmsmap.app.module.ActivityModule", "provideActivityContext");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.content.Context>}.
     */
    @Override
    public android.content.Context get() {
      return module.provideActivityContext();
    }
  }
}
